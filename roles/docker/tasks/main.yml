# roles/docker/tasks/main.yml
# Installs Docker and Docker Compose plugin
---
- name: Check if Docker is already installed
  ansible.builtin.command: docker --version
  register: docker_check
  changed_when: false
  ignore_errors: true

- name: Install Docker (if not present)
  when: docker_check.failed
  block:
    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker # Creates /etc/apt/sources.list.d/docker.list

    - name: Install Docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin # For 'docker compose' (with a space)
        state: present
        update_cache: yes

    - name: Ensure Docker service is started and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes
  tags: ['docker', 'setup']

- name: Add user '{{ ansible_user }}' to the docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}" # ansible_user is usually the SSH user
    groups: docker
    append: yes # Add to existing groups
  notify: # This is a handler name, see handlers section later if needed
    - Restart SSH or prompt for re-login # Not a real handler, just a note
  tags: ['docker', 'setup', 'users']

# Note: For the group change to take effect for the SSH user's current session
# without logging out, it's tricky. Ansible usually opens new SSH sessions for tasks.
# A reboot or manual logout/login by the user might be the simplest post-Ansible run.

